# Default values for calibration-tom.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# CronJob: cron_trigger management command
# "* * * * *" is 'at every minute'
# "*/5 * * * *" is 'every 5th minute'
# "13 * * * *" is '13 minutes after every hour'
crontrigger:
  enabled: true
  schedule: "*/11 * * * *"
  resources: {}

updatestatus:
  enabled: true
  schedule: "*/11 * * * *"  # 'every 11th minute'
  resources: {}


runcadencestrategies:
  enabled: true
  schedule: "25 * * * *"  # 'every hour at 25 minutes past the hour'
  resources: {}

settargets:
  enabled: false  # TODO: enable this after fixing settargets management command
  schedule: "0 0 * * *"  # 'once per day at 0:00'
  resources: {}

image:
  repository: docker.lco.global/calibration-tom
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
#  runAsNonRoot: false
  # TODO: make file system readOnly (etc) when we get rid of sqlite backend
  #readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

lcoServices:
  configdbURL: "http://configdb-dev.lco.gtn"
  observationPortalURL: "http://observation-portal-dev.lco.gtn"

# Settings for the PostgreSQL database
applyDatabaseMigrations: true
useDockerizedDatabase: true

djangoDatabaseEngine: "django.db.backends.postgresql"
postgresql:
  # see templates/_helpers.tpl for hostname generation
  hostname: ""
  postgresqlUsername: "postgres"
  postgresqlPassword: "changeme"
  postgresqlDatabase: "postgres"
  service:
    port: "5432"
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
    limits:
      cpu: 400m
      memory: 512Mi

secretKey: "changeme"

loadInitialData:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}
