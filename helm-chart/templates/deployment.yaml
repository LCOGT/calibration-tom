apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "calibration-tom.fullname" . }}
  labels:
{{ include "calibration-tom.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "calibration-tom.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "calibration-tom.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        {{- if .Values.applyDatabaseMigrations }}
        - name: apply-db-migrations
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - python
            - manage.py
            - migrate
            - --no-input
          env:
            {{- include "calibration-tom.backendEnv" . | nindent 12 }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            # TODO: make root file system readOnly when we get rid of sqlite backend
            readOnlyRootFilesystem: false
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: specutils
              mountPath: /.specutils
              readOnly: false
            - name: astropy
              mountPath: /.astropy
              readonly: false
        {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "calibration-tom.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - gunicorn
            - --bind=0.0.0.0:8080
            - --worker-class=gevent
            - --workers={{ .Values.gunicornWorkers | default 2 }}
            - --timeout={{ .Values.gunicornTimeout | default 300 }}
            - --access-logfile=-
            - --error-logfile=-
            - calibration-tom.wsgi
          env:
            {{ include "calibration-tom.backendEnv" . | nindent 12 }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              readOnly: false
      volumes:
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 16Mi
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
