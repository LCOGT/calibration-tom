# Generated by Django 2.1.12 on 2019-09-10 21:01

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=200)),
                ('host', models.CharField(blank=True, default='', help_text='The physical machine hostname that this camera is connected to', max_length=200)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='CameraType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Enclosure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, default='', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FilterWheel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(blank=True, default='', help_text='Name of the instrument', max_length=200)),
                ('state', models.IntegerField(choices=[(0, 'DISABLED'), (10, 'MANUAL'), (20, 'COMMISSIONING'), (25, 'STANDBY'), (30, 'SCHEDULABLE')], default=0)),
                ('autoguider_type', models.CharField(choices=[('InCamera', 'InCamera'), ('OffAxis', 'OffAxis'), ('SelfGuide', 'SelfGuide')], default='OffAxis', max_length=200)),
                ('autoguider_camera', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='autoguides_for', to='calibrations.Camera')),
                ('science_camera', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='calibrations.Camera')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OpticalElementGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=3)),
                ('name', models.CharField(blank=True, default='', max_length=200)),
                ('lat', models.FloatField(default=0.0)),
                ('long', models.FloatField(default=0.0)),
                ('elevation', models.IntegerField(help_text='meters')),
                ('restart_time', models.TimeField(default=datetime.time(0, 0))),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Telescope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, default='', max_length=200)),
                ('lat', models.FloatField()),
                ('long', models.FloatField()),
                ('horizon', models.FloatField()),
                ('ha_limit_neg', models.FloatField()),
                ('ha_limit_pos', models.FloatField()),
                ('zenith_blind_spot', models.FloatField(default=0.0, help_text='For AltAz telescopes, radius of zenith blind spot in degrees')),
                ('enclosure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='calibrations.Enclosure')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='instrument',
            name='telescope',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='calibrations.Telescope'),
        ),
        migrations.AddField(
            model_name='enclosure',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='calibrations.Site'),
        ),
        migrations.AddField(
            model_name='camera',
            name='camera_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='calibrations.CameraType'),
        ),
        migrations.AddField(
            model_name='camera',
            name='filter_wheel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='calibrations.FilterWheel'),
        ),
        migrations.AddField(
            model_name='camera',
            name='optical_element_groups',
            field=models.ManyToManyField(blank=True, to='calibrations.OpticalElementGroup'),
        ),
    ]
